@page "/flightDetail"
@using AuthDemo.Transport.Components.Layout
@using AuthDemo.Shared.Models
@inject AuthDemo.Transport.Services.FlightService FlightService
@inject AuthDemo.Transport.Services.TokenHolder TokenHolder

<h3>Flight Detail</h3>
@if (flight == null)
{
    <p><em>Loading...</em></p>
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <div class="card p-3 mt-3 shadow">
        <h4>@flight.FlightNumber - @flight.Airline</h4>
        <p><strong>Direction:</strong> @flight.Direction</p>
        <p><strong>Origin:</strong> @flight.Origin</p>
        <p><strong>Destination:</strong> @flight.Destination</p>
        <p><strong>Departure Time:</strong> @flight.DepartureTime</p>
        <p><strong>Arrival Time:</strong> @flight.ArrivalTime</p>
        <p><strong>Status:</strong> @flight.Status</p>
    </div>
}

@code {
    private FlightSchedule? flight;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var token = TokenHolder.Token;
            flight = await FlightService.GetFlightDetailAsync(token);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading weather data: {ex.Message}";
        }
    }
}
