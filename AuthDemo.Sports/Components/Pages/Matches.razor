@page "/match"
@using AuthDemo.Sports.Components.Layout
@using AuthDemo.Shared.Models
@inject AuthDemo.Sports.Services.GameMatchService GameMatchService
@inject AuthDemo.Sports.Services.TokenHolder TokenHolder

<h3>Weather Forecast</h3>
@if (matches == null)
{
    <p><em>Loading...</em></p>
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Team A</th>
                <th>Team B</th>
                <th>Venue</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var match in matches)
            {
                <tr>
                    <td>@match.MatchDate.ToShortDateString()</td>
                    <td>@match.TeamA</td>
                    <td>@match.TeamB</td>
                    <td>@match.Venue</td>
                    <td>@match.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<GameMatch>? matches;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var token = TokenHolder.Token;
            matches = await GameMatchService.GetMatchesAsync(token);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading Game Match data: {ex.Message}";
        }
    }
}
